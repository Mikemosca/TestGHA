# This is a basic workflow to help you get started with Actions

name: rubystate

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  checkruby:
    # The type of runner that the job will run on
    name: Test on node ${{ matrix.ruby_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ruby_version: [2.5.x, 2.6.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo State of ruby!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo is ruby installed
          ruby --version
          
  # This workflow contains a single job called "build"
  checktools:
    env:
      NATURAL_LANGUAGE_CLASSIFIER_URL: ${{ secrets.NATURAL_LANGUAGE_CLASSIFIER_URL }

 # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: checkruby

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo State of ruby!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo is rake installed
          rake --version
          echo is gem installed
          gem --version
          echo NATURAL_LANGUAGE_CLASSIFIER_URL
